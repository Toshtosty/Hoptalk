<div
      className="h-screen flex items-center justify-center p-4 sm:p-6 md:p-8"
      data-theme="cupcake"
    >

     <Rabbit className="size-9 text-primary" />
            <span
              className="text-3xl font-bold font-mono bg-clip-text text-transparent bg-gradient-to-r from-primary to-secondary
            tracking-wider"
            >
              HopTalk
            </span>



            <img src="/Login-bro.png" alt="Language connection illustration" className="w-full h-full" />

              <Rabbit className="size-9 text-primary" />
            <span className="text-3xl font-bold font-mono bg-clip-text text-transparent bg-gradient-to-r from-primary to-secondary  tracking-wider">
              Hoptalk
            </span>




            *******************************************************
            import React from "react";
import "./index.css";
import HomePage from "./pages/HomePage.jsx";
import { Routes, Route,Navigate } from "react-router-dom";

import OnboardingPage from "./pages/OnboardingPage.jsx";
import SignUpPage from "./pages/SignUpPage.jsx";
import LoginPage from "./pages/LoginPage.jsx";
import NotificationPage from "./pages/NotificationPage.jsx";
import CallPage from "./pages/CallPage.jsx";
import ChatPage from "./pages/ChatPage.jsx";
import { Toaster, toast } from "react-hot-toast";

import { useQuery } from "@tanstack/react-query";
import axios from "axios";

import { axiosInstance } from "./lib/axios.js";
import PageLoader from "./components/PageLoader.jsx";
import { getAuthUser } from "./lib/api.js";
import useAuthUser from "./hooks/useAuthUser.js";
import { useThemeStore } from "./store/useThemeStore.js";
import Layout from "./components/Layout.jsx";

const App = () => {
  //tanstack query

  const { isLoading, authUser } = useAuthUser();
  const isAuthenticated=Boolean(authUser);
  const isOnboarded= authUser?.isOnboarded;

   const {theme} = useThemeStore();

if(isLoading) return <PageLoader />


  return (
    <div className="h-screen" data-theme={theme}>
      <Routes>
        <Route path="/"
             element={ isAuthenticated && isOnboarded ? (
              <Layout showSidebar={true}>
                <HomePage />
              </Layout>
             ) :(   <Navigate to={!isAuthenticated?"/login" :"/onboarding"}/>)}/>
        
        <Route path="/onboarding"
            element={isAuthenticated ? (!isOnboarded?(<OnboardingPage />):(<Navigate to="/"/>)):( <Navigate to="/login" />)} />
       
       <Route
          path="/signup"
          element={
            !isAuthenticated ? <SignUpPage /> : <Navigate to={isOnboarded ? "/" : "/onboarding"} />
          }
        />

 <Route
          path="/login"
          element={
            !isAuthenticated ? <LoginPage /> : <Navigate to={isOnboarded ? "/" : "/onboarding"} />
          }
        />

         <Route
          path="/notifications"
          element={
            isAuthenticated && isOnboarded ? (
              <Layout showSidebar={true}>
                <NotificationPage />
              </Layout>
            ) : (
              <Navigate to={!isAuthenticated ? "/login" : "/onboarding"} />
            )
          }
        /> 
        <Route
          path="/call/:id"
          element={
            isAuthenticated && isOnboarded ? (
              <CallPage />
            ) : (
              <Navigate to={!isAuthenticated ? "/login" : "/onboarding"} />
            )
          }
        />
         <Route
          path="/chat/:id"
          element={
            isAuthenticated && isOnboarded ? (
              <Layout showSidebar={false}>
                <ChatPage />
              </Layout>
            ) : (
              <Navigate to={!isAuthenticated ? "/login" : "/onboarding"} />
            )
          }
        />
        </Routes>

      <Toaster />
    </div>
  );
};

export default App;
